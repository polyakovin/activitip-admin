{"version":3,"sources":["Header.jsx","Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","user","classes","className","AppBar","position","Toolbar","Typography","variant","displayName","email","Table","auth","provider","props","data","setData","addItem","updateData","selectRow","style","maxWidth","paddingTop","columns","field","onRowClick","_","item","id","tableData","icons","Add","Edit","Delete","editable","onRowAdd","newData","Promise","resolve","reject","length","onRowUpdate","oldData","dataUpdate","index","firebase","apps","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","GoogleAuthProvider","db","getDatabase","dbRef","ref","addActivity","activity","newID","set","catch","error","alert","updateActivity","updatedActivity","addTag","tag","updateTag","updatedTag","App","useState","activities","setActivities","tags","setTags","screen","setScreen","authorizedUser","setAuthorizedUser","selectedActivity","setSelectedActivity","getAppData","get","child","then","snapshot","val","useEffect","onAuthStateChanged","console","log","signInWithPopup","selectActivity","onClick","disabled","code","youtubeUrl","width","height","src","frameborder","allow","allowfullscreen","description","map","type","checked","includes","onChange","x","selectedTag","newTags","filter","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17661a7a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n function Header({ user }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {user.displayName} ({user.email})\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Table(props) {\n  const {\n    title,\n    data,\n    setData,\n    addItem,\n    updateData,\n    selectRow,\n  } = props;\n\n  return (\n    <div style={{ maxWidth: \"100%\", paddingTop: \"12px\"}}>\n      <MaterialTable\n        title={title}\n        columns={[\n          {\n            title: 'Название',\n            field: 'title'\n          },\n          {\n            title: 'Код',\n            field: 'code'\n          },\n        ]}\n        data={data}\n        onRowClick={(_, item) => {\n          if (!selectRow) {\n            return;\n          }\n          item.id = item.tableData.id;\n          delete item.tableData;\n          selectRow(item);\n        }}\n        icons={{\n          Add: props => <AddIcon />,\n          Edit: props => <EditIcon />,\n          Delete: props => <DeleteIcon />,\n        }}\n        editable={{\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            addItem(newData, data.length);\n            setData([...data, newData]);\n            resolve();\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            updateData(newData, index);\n            resolve();\n          }),\n          // onRowDelete: oldData => new Promise((resolve, reject) => {\n          //   const dataDelete = [...data];\n          //   const index = oldData.tableData.id;\n          //   dataDelete.splice(index, 1);\n          //   setData([...dataDelete]);\n          //   resolve();\n          // }),\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Table;\n","import React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Table from \"./Table\"\nimport firebase from \"firebase/compat/app\";\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup } from \"firebase/auth\";\nimport { getDatabase, ref, child, get, set } from \"firebase/database\";\nimport \"firebase/compat/auth\";\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCExrlbwm2DMX_lrhS516-93vUf4GSPgAA',\n  authDomain: \"tryeverything-421ed.firebaseapp.com\",\n  databaseURL: \"https://tryeverything-421ed-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"tryeverything-421ed\",\n  storageBucket: \"tryeverything-421ed.appspot.com\",\n  messagingSenderId: \"768977457633\",\n  appId: \"1:768977457633:web:df590da29170678cdf42a0\",\n  measurementId: \"G-56RPZMD413\"\n};\n\nlet auth, provider;\n\nif (firebase.apps.length === 0) {\n  const app = firebase.initializeApp(firebaseConfig);\n  auth = getAuth(app);\n  provider = new GoogleAuthProvider();\n}\n\n\nconst db = getDatabase();\nconst dbRef = ref(getDatabase());\n\nfunction addActivity(activity, newID) {\n  set(ref(db, 'activities/' + newID), activity).catch(error => {\n    alert(error);\n  });\n}\n\nfunction updateActivity(updatedActivity, id) {\n  set(ref(db, 'activities/' + id), updatedActivity).catch(error => {\n    alert(error);\n  });\n}\n\nfunction addTag(tag, newID) {\n  set(ref(db, 'tags/' + newID), tag).catch(error => {\n    alert(error);\n  });\n}\n\nfunction updateTag(updatedTag, id) {\n  set(ref(db, 'tags/' + id), updatedTag).catch(error => {\n    alert(error);\n  });\n}\n\nfunction App (){\n  const [activities, setActivities] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [screen, setScreen] = useState(1);\n  const [authorizedUser, setAuthorizedUser] = useState({});\n  const [selectedActivity, setSelectedActivity] = useState(null);\n\n  const getAppData = () => {\n    get(child(dbRef, '/activities/')).then((snapshot) => {\n      setActivities(snapshot && snapshot.val());\n    });\n\n    get(child(dbRef, '/tags/')).then((snapshot) => {\n      setTags(snapshot && snapshot.val());\n    });\n  }\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        console.log(user);\n        setAuthorizedUser(user);\n        getAppData();\n      } else {\n        signInWithPopup(auth, provider)\n          .then(({ user }) => {\n            console.log(user);\n            setAuthorizedUser(user);\n            getAppData();\n          }).catch((error) => {\n            console.log(error);\n          });\n      }\n    });\n  }, []);\n\n  const selectActivity = (activity) => {\n    setScreen(2);\n    console.log(activity);\n    setSelectedActivity(activity);\n  };\n\n  return (\n    <div>\n      <Header user={authorizedUser} />\n      {screen === 1 ? (\n        <div>\n          <Table\n            title=\"Категории\"\n            data={tags}\n            setData={setTags}\n            updateData={updateTag}\n            addItem={addTag}\n          />\n          <Table\n            title=\"Активности\"\n            data={activities}\n            setData={setActivities}\n            addItem={addActivity}\n            updateData={updateActivity}\n            selectRow={selectActivity}\n          />\n        </div>\n      ) : null}\n      {screen === 2 ? (\n        <div className=\"screen\">\n          <button onClick={() => setScreen(1)}>&larr; Назад</button>\n          <h1>{selectedActivity.title}</h1>\n          <div>\n            <button onClick={() => selectActivity({\n              ...activities[selectedActivity.id - 1],\n              id: selectedActivity.id - 1,\n            })} disabled={selectedActivity.id === 0}>&larr;</button>\n            <button onClick={() => selectActivity({\n              ...activities[selectedActivity.id + 1],\n              id: selectedActivity.id + 1,\n            })} disabled={selectedActivity.id === activities.length - 1}>&rarr;</button>\n          </div>\n          <h2>Внутренний код — «{selectedActivity.code}»</h2>\n          {selectedActivity.youtubeUrl && (\n            <div>\n              <iframe width=\"560\" height=\"315\" src={'https://www.youtube.com/embed/' + selectedActivity.youtubeUrl} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n          )}\n          <p>{selectedActivity.description}</p>\n          {tags.map((tag, index) => (\n            <label className=\"tag\" key={index + tag.code}>\n              <input type=\"checkbox\" checked={(selectedActivity.tags || []).includes(tag.code)} onChange={(x) => {\n                const selectedTag = tags[index];\n                let newTags = selectedActivity.tags || [];\n                const wasSelected = newTags.includes(selectedTag.code);\n                if (wasSelected) {\n                  newTags = newTags.filter(tag => tag !== selectedTag.code);\n                } else {\n                  newTags.push(selectedTag.code);\n                }\n                selectedActivity.tags = newTags;\n                updateActivity(selectedActivity, selectedActivity.id)\n                setActivities([...activities]);\n              }} />\n              {tag.title}\n            </label>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}